"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
const core_1 = require('@angular/core');
const cache_storage_abstract_service_1 = require('../cache-storage-abstract.service');
/**
 * Service for storing data in local storage
 */
let CacheMemoryStorage = class CacheMemoryStorage extends cache_storage_abstract_service_1.CacheStorageAbstract {
    constructor(...args) {
        super(...args);
        this._data = {};
    }
    getItem(key) {
        return this._data[key] ? this._data[key] : null;
    }
    setItem(key, value) {
        this._data[key] = value;
    }
    removeItem(key) {
        delete this._data[key];
    }
    clear() {
        this._data = [];
    }
    type() {
        return 2 /* MEMORY */;
    }
    isEnabled() {
        return true;
    }
};
CacheMemoryStorage = __decorate([
    core_1.Injectable(), 
    __metadata('design:paramtypes', [])
], CacheMemoryStorage);
exports.CacheMemoryStorage = CacheMemoryStorage;
//# sourceMappingURL=cache-memory.service.js.map